8-12-14 Got datepicker and second screen added. Adding back end to datepicker tomorrow
8-13-14 Got fields and listeners for second screen set up. Need to delete edittext on first screen. And need to implement a next button on your number pad or find an equally smooth way of navigating through them. 
8-14-14 Added back end to TM fields. Added other front end components on secondScreen. Created segue to third screen. Next on your plate is transferring the data between those views and updating the title. 
	I would also think about holes you fell into during android development (besides the fact that java is a spacesuit that takes 500 lines to do anything but will go anywhere). Primarily try to make use of abstractio         and don't let your class definitions get too bloated. Research ways to transfer that data then implement that on Sunday or Monday. 
8-19-14: Added data transfer for training maxes, still need to trransfer rest of data including cycle, unitmode and rounding boolean. After that, take care of error handling on your training maxes and cycle column (no ridculous values for training maxes, cycles between 1-5. Might as well create pattern adjuster segue and view controller now so you don't have to have a wild goose chase with methods like you did in android.
8-20-14: Added error handling and some slight UI changes to avoid sliding my view upwafds just so user can type a number between 1 and 5. Added error handling to all fields that need it. Much more general than android version, I like it slightly better and not just because it was easier to implement. It's cleaner. Data transfer should be good to go. Added condition on segue to only continue if there were no errors generated by any of the fields. (0, empty or a ridiculous number). Found a way to do drag and drop using already existing components. Finding out it's easier to just not reinvent the wheel.  Added sqlite back end. Need to modify save/query methods 
After that, probably pursue creating a basic projection with no views etc to worry about. Lots of methods to create. First up is getting a pattern creation page up. That needs to be done eventually so you may as well suck it up and add it.
database info: http://www.techotopia.com/index.php/An_Example_SQLite_based_iOS_7_Application
8-21-14: After a lot of initial struggle I was able to create the pattern creation page. There is just some segue data manipulation to be done and I think we should be good to go after that. Currently bugs that need to be squashed before moving forward are starting date preservation between pattern adjustment and datepicker. All your other views implement the default navigation system but you new buttons on the pattern page throw a wrench into things. To fix I would just play segue vollyball. It's not elegant but it's my first app :) After data transfer is hooked up I'd say you're good to go getting sql set up on TableDisplay.h/.m, after that dig up those functions you wrote in c and write any additional ones as they come up, using android source as a guide.
8-25-14: Fixed date bug via segue volleyball, dates should now be saved when going from adjustpattern (already support from TM)  Got all of data to transfer, added label which updates user of what pattern they are currently using. Got initial sql set up, next up is creating insert/select methods. (Hopefully somewhat similar to your android sqllite methods.. minus the lack of ContentValues:( ) 
8-26-14: Got inserts/retrievals going, not quite sure what's next. Don't dive right in. Have a plan. 
8-27-14: Worked on translating dateprocessor class. wrestled with objective c date formats. Fixed bug with datepicker. Next up is to fix date formatting in you processor method so you can call incrementDay and whatnot. After that fix your timezone and locale shit in your datepicker screen because that's gonna cause all kinds of wrong dates and you're better than that ;P
